[  {    "type": "get",    "url": "/account",    "title": "Get Account",    "description": "<p>Gets the current logged in user's account information.</p>",    "version": "1.0.0",    "name": "GetProfile",    "group": "Account",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"admin\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users have access to this resource</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to this resource.\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 NotFound\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"The user specified does not match any records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/account/account.routes.js",    "groupTitle": "Account"  },  {    "type": "get",    "url": "/account/terminate",    "title": "Terminate Account",    "description": "<p>Terminates the current user account by deleting the user.</p>",    "version": "1.0.0",    "name": "GetTerminateAccount",    "group": "Account",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"admin\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users have access to this resource</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to this resource.\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 NotFound\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"The user specified does not match any records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/account/account.routes.js",    "groupTitle": "Account"  },  {    "type": "patch",    "url": "/account/update",    "title": "Update Account",    "description": "<p>Updates the current user account.</p>",    "version": "1.0.0",    "name": "GetUpdateAccount",    "group": "Account",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "8..128",            "optional": true,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role (You must be an admin to change the user's role).</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"firstName\": \"First\",\n  \"lastName\": \"Last\",\n  \"email\": \"example@email.com\",\n  \"password\": \"userpassword123\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"admin\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters are invalid</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users have access to this resource</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      },      "examples": [        {          "title": "BadRequest-Response",          "content": "HTTP/1.1 400 Bad Request\n{\n   \"error\": {\n     \"status\": \"400\",\n     \"message\": \"Validation Error.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to this resource.\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 NotFound\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"The user specified does not match any records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/account/account.routes.js",    "groupTitle": "Account"  },  {    "type": "post",    "url": "/login",    "title": "Login",    "description": "<p>Log a user in to access secure resources.</p>",    "version": "1.0.0",    "name": "PostLogin",    "group": "Authentication",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "8..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"email\": \"example@email.com\",\n  \"password\": \"userpassword123\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "token.expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.timezone",            "description": "<p>The server's Timezone</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.role",            "description": "<p>User's role</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 201 OK\n{\n  \"token\": {\n    \"tokenType\": \"JWT\",\n    \"accessToken\": \"eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\",\n    \"refreshToken\": \"eyJhbGcsdfiOiJIsdfUzI1NiIsgrInR5ergcgergergC\",\n    \"expiresIn\": \"3600\",\n    \"timezone\": \"Example timezone\"\n  },\n  \"user\": {\n    \"firstName\": \"First\",\n    \"lastName\": \"Last\",\n    \"email\": \"example@email.com\",\n    \"role\": \"admin\",\n    \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n    \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User email does not match records</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect email and password combination</p>"          }        ]      },      "examples": [        {          "title": "BadRequest-Response",          "content": "HTTP/1.1 400 Bad Request\n{\n   \"error\": {\n     \"status\": \"400\",\n     \"message\": \"Validation error.\",\n     \"errors\": \"error example\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 Not Found\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"User email does not match records.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Invalid email and password combination.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/auth/auth.routes.js",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/refresh-token",    "title": "Refresh AccessToken",    "description": "<p>Refresh expired access token.</p>",    "version": "1.0.0",    "name": "PostRefreshToken",    "group": "Authentication",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "refreshToken",            "description": "<p>Refresh token aquired when user logged in</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"email\": \"example@email.com\",\n  \"refreshToken\": \"eyJhbGcsdfiOiJIsdfUzI1NiIsgrInR5ergcgergergC\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "token.expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.timezone",            "description": "<p>The server's Timezone</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.role",            "description": "<p>User's role</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 201 OK\n{\n  \"token\": {\n    \"tokenType\": \"JWT\",\n    \"accessToken\": \"eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\",\n    \"refreshToken\": \"eyJhbGcsdfiOiJIsdfUzI1NiIsgrInR5ergcgergergC\",\n    \"expiresIn\": \"3600\",\n    \"timezone\": \"Example timezone\"\n  },\n  \"user\": {\n    \"firstName\": \"First\",\n    \"lastName\": \"Last\",\n    \"email\": \"example@email.com\",\n    \"role\": \"admin\",\n    \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n    \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User email does not match records</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect email and password combination</p>"          }        ]      },      "examples": [        {          "title": "BadRequest-Response",          "content": "HTTP/1.1 400 Bad Request\n{\n   \"error\": {\n     \"status\": \"400\",\n     \"message\": \"Validation error.\",\n     \"errors\": \"error example\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 Not Found\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"User email does not match records.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Invalid email and password combination.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/auth/auth.routes.js",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/register",    "title": "Register",    "description": "<p>Register a new user.</p>",    "version": "1.0.0",    "name": "PostRegister",    "group": "Authentication",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "8..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"firstName\": \"First\",\n  \"lastName\": \"Last\",\n  \"email\": \"example@email.com\",\n  \"password\": \"userpassword123\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "token.expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.timezone",            "description": "<p>The server's Timezone</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.role",            "description": "<p>User's role</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 201 OK\n{\n  \"token\": {\n    \"tokenType\": \"JWT\",\n    \"accessToken\": \"eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\",\n    \"refreshToken\": \"eyJhbGcsdfiOiJIsdfUzI1NiIsgrInR5ergcgergergC\",\n    \"expiresIn\": \"3600\",\n    \"timezone\": \"Example timezone\"\n  },\n  \"user\": {\n    \"firstName\": \"First\",\n    \"lastName\": \"Last\",\n    \"email\": \"example@email.com\",\n    \"role\": \"admin\",\n    \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n    \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          },          {            "group": "Bad Request 400",            "optional": false,            "field": "APIError",            "description": "<p>Email is not unique</p>"          }        ]      },      "examples": [        {          "title": "Error-Response",          "content": "HTTP/1.1 400 Bad Request\n{\n   \"error\": {\n     \"status\": \"400\",\n     \"message\": \"Validation error\",\n     \"errors\": \"error example\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/auth/auth.routes.js",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/reset-password",    "title": "Reset Password",    "description": "<p>Resets a user forgotten password.</p>",    "version": "1.0.0",    "name": "PostResetPassword",    "group": "Authentication",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"email\": \"example@email.com\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "token.expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.timezone",            "description": "<p>The server's Timezone</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.role",            "description": "<p>User's role</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 201 OK\n{\n  \"token\": {\n    \"tokenType\": \"JWT\",\n    \"accessToken\": \"eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\",\n    \"refreshToken\": \"eyJhbGcsdfiOiJIsdfUzI1NiIsgrInR5ergcgergergC\",\n    \"expiresIn\": \"3600\",\n    \"timezone\": \"Example timezone\"\n  },\n  \"user\": {\n    \"firstName\": \"First\",\n    \"lastName\": \"Last\",\n    \"email\": \"example@email.com\",\n    \"role\": \"admin\",\n    \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n    \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User email does not match records</p>"          }        ]      },      "examples": [        {          "title": "BadRequest-Response",          "content": "HTTP/1.1 400 Bad Request\n{\n   \"error\": {\n     \"status\": \"400\",\n     \"message\": \"Validation error.\",\n     \"errors\": \"error example\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 Not Found\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \" User email does not match records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/auth/auth.routes.js",    "groupTitle": "Authentication"  },  {    "type": "get",    "url": "/status",    "title": "Check Status",    "description": "<p>Returns a successful response if the server is able to receive requests and send responses back.</p>",    "version": "1.0.0",    "name": "GetStatus",    "group": "Status",    "permission": [      {        "name": "public"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Acknowledgement of successfully received message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"OK\",\n}",          "type": "json"        }      ]    },    "filename": "source/api/status/status.routes.js",    "groupTitle": "Status"  },  {    "type": "delete",    "url": "/users/:id",    "title": "Delete User",    "description": "<p>Delete a user.</p>",    "version": "1.0.0",    "name": "DeleteUser",    "group": "User_Admin",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The user's ID</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"admin\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      },      "examples": [        {          "title": "Forbidden-Response",          "content": "HTTP/1.1 403 Forbidden\n{\n   \"error\": {\n     \"status\": \"403\",\n     \"message\": \"User does not have permission to access resource.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to the resource.\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 NotFound\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"The user specified does not match any records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/user/user.routes.js",    "groupTitle": "User_Admin"  },  {    "type": "get",    "url": "/users",    "title": "List Users",    "description": "<p>Get a list of all registered users.</p>",    "version": "1.0.0",    "name": "GetListUsers",    "group": "User_Admin",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>Page number (pagging)</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "perPage",            "defaultValue": "1",            "description": "<p>Number of users per page (pagging)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "firstName",            "description": "<p>User's first name (filter)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "lastName",            "description": "<p>User's last name (filter)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's email (filter)</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role (filter)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "users",            "description": "<p>A list of all registered users</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": " HTTP/1.1 200 OK\n [\n    {\n      \"firstName\": \"First\",\n      \"lastName\": \"Last\",\n      \"email\": \"example@email.com\",\n      \"role\": \"admin\",\n      \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n      \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n    },\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"email\": \"johnsmith@email.com\",\n      \"role\": \"user\",\n      \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n      \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n    },\n    {\n      \"firstName\": \"Peter\",\n      \"lastName\": \"Pam\",\n      \"email\": \"peterpam@email.com\",\n      \"role\": \"user\",\n      \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n      \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n    }\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ]      },      "examples": [        {          "title": "Forbidden-Response",          "content": "HTTP/1.1 403 Forbidden\n{\n   \"error\": {\n     \"status\": \"403\",\n     \"message\": \"User does not have permission to access resource.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to the resource.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/user/user.routes.js",    "groupTitle": "User_Admin"  },  {    "type": "get",    "url": "/users/:id",    "title": "Get User",    "description": "<p>Get user information.</p>",    "version": "1.0.0",    "name": "GetUser",    "group": "User_Admin",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The user's ID</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"admin\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      },      "examples": [        {          "title": "Forbidden-Response",          "content": "HTTP/1.1 403 Forbidden\n{\n   \"error\": {\n     \"status\": \"403\",\n     \"message\": \"User does not have permission to access resource.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to the resource.\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 NotFound\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"The user specified does not match any records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/user/user.routes.js",    "groupTitle": "User_Admin"  },  {    "type": "patch",    "url": "/users/:id",    "title": "Update User",    "description": "<p>Update some fields of a user document.</p>",    "version": "1.0.0",    "name": "PatchUpdateUser",    "group": "User_Admin",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The user's ID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "8..128",            "optional": true,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"firstName\": \"First\",\n  \"lastName\": \"Last\",\n  \"email\": \"example@email.com\",\n  \"password\": \"userpassword123\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"admin\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      },      "examples": [        {          "title": "Forbidden-Response",          "content": "HTTP/1.1 403 Forbidden\n{\n   \"error\": {\n     \"status\": \"403\",\n     \"message\": \"User does not have permission to access resource.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to the resource.\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 NotFound\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"The user specified does not match any records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/user/user.routes.js",    "groupTitle": "User_Admin"  },  {    "type": "post",    "url": "/users",    "title": "Create User",    "description": "<p>Create a new user.</p>",    "version": "1.0.0",    "name": "PostCreateUser",    "group": "User_Admin",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "8..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"firstName\": \"First\",\n  \"lastName\": \"Last\",\n  \"email\": \"example@email.com\",\n  \"password\": \"userpassword123\",\n  \"role\": \"user\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 201 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"user\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ]      },      "examples": [        {          "title": "Forbidden-Response",          "content": "HTTP/1.1 403 Forbidden\n{\n   \"error\": {\n     \"status\": \"403\",\n     \"message\": \"User does not have permission to access resource.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to the resource.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/user/user.routes.js",    "groupTitle": "User_Admin"  },  {    "type": "put",    "url": "/users/:id",    "title": "Replace User",    "description": "<p>Replace the whole user document with a new one.</p>",    "version": "1.0.0",    "name": "PutReplaceUser",    "group": "User_Admin",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's accessToken needed for identification/authorization</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "{\n  \"Authorization\": \"Bearer eyJpsdDsdZCI6IjVjMDAzM2NjNWRhNiIsImlhdCI6MTU0\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The user's ID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "8..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "{\n  \"firstName\": \"First\",\n  \"lastName\": \"Last\",\n  \"email\": \"example@email.com\",\n  \"password\": \"userpassword123\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User's last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>User's creation timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>User's last update timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n   \"firstName\": \"First\",\n   \"lastName\": \"Last\",\n   \"email\": \"example@email.com\",\n   \"role\": \"admin\",\n   \"createdAt\": \"2018-11-30T19:29:47.971Z\",\n   \"updatedAt\": \"2018-11-30T19:29:47.971Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      },      "examples": [        {          "title": "Forbidden-Response",          "content": "HTTP/1.1 403 Forbidden\n{\n   \"error\": {\n     \"status\": \"403\",\n     \"message\": \"User does not have permission to access resource.\"\n   }\n}",          "type": "json"        },        {          "title": "Unauthorized-Response",          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"error\": {\n     \"status\": \"401\",\n     \"message\": \"Only authenticated users have access to the resource.\"\n   }\n}",          "type": "json"        },        {          "title": "NotFound-Response",          "content": "HTTP/1.1 404 NotFound\n{\n   \"error\": {\n     \"status\": \"404\",\n     \"message\": \"The user specified does not match any records.\"\n   }\n}",          "type": "json"        }      ]    },    "filename": "source/api/user/user.routes.js",    "groupTitle": "User_Admin"  }]
